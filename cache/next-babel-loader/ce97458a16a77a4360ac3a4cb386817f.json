{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/bbc-next-ssg/components/Section/Section.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { PostCard } from \"../Post\";\nimport { Grid, Title, MoreLink } from \"./style\";\nexport const Section = ({\n  title,\n  posts,\n  isCompact = false\n}) => {\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, title), __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, posts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))), isCompact && __jsx(Link, {\n    href: `/category/${title}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(MoreLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"More in \", title)));\n};","map":{"version":3,"sources":["/Users/user/Documents/GitHub/bbc-next-ssg/components/Section/Section.tsx"],"names":["React","Link","PostCard","Grid","Title","MoreLink","Section","title","posts","isCompact","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,QAAsC,SAAtC;AAQA,OAAO,MAAMC,OAAwC,GAAG,CAAC;AACvDC,EAAAA,KADuD;AAEvDC,EAAAA,KAFuD;AAGvDC,EAAAA,SAAS,GAAG;AAH2C,CAAD,KAIlD;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,KAAR,CADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACE,GAAN,CAAWC,IAAD,IACT,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,EAQGF,SAAS,IACR,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,aAAYF,KAAM,EAA/B;AAAkC,IAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmBA,KAAnB,CADF,CATJ,CADF;AAgBD,CArBM","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport Link from \"next/link\";\nimport { Post as PostType } from \"../../shared/types\";\nimport { PostCard } from \"../Post\";\nimport { Grid, Title, MoreLink } from \"./style\";\n\ninterface SectionProps {\n  title: string;\n  posts: PostType[];\n  isCompact?: boolean;\n}\n\nexport const Section: FunctionComponent<SectionProps> = ({\n  title,\n  posts,\n  isCompact = false,\n}) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      <Grid>\n        {posts.map((post) => (\n          <PostCard key={post.id} post={post} />\n        ))}\n      </Grid>\n\n      {isCompact && (\n        <Link href={`/category/${title}`} passHref>\n          <MoreLink>More in {title}</MoreLink>\n        </Link>\n      )}\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}