{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"node-fetch\";\nimport { config } from \"./config\";\nexport function fetchComments(_x) {\n  return _fetchComments.apply(this, arguments);\n}\n\nfunction _fetchComments() {\n  _fetchComments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(postId) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(config.baseUrl, \"/comments/\").concat(postId));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchComments.apply(this, arguments);\n}\n\nexport function submitComment(_x2, _x3, _x4) {\n  return _submitComment.apply(this, arguments);\n}\n\nfunction _submitComment() {\n  _submitComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(postId, name, comment) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(config.baseUrl, \"/posts/\").concat(postId, \"/comments\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n              },\n              body: JSON.stringify({\n                name: name,\n                comment: comment\n              })\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _submitComment.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}